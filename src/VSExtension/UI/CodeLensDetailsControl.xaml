<UserControl x:Class="Microscope.VSExtension.UI.CodeLensDetailsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:model="clr-namespace:Microscope.CodeAnalysis.Model;assembly=Microscope.CodeAnalysis"
             xmlns:vs="clr-namespace:Microsoft.VisualStudio.CodeSense.Controls;assembly=Microsoft.VisualStudio.CodeSense.Common"
             d:DataContext="{d:DesignInstance Type=model:DetailsData}"
             mc:Ignorable="d">
  <UserControl.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <x:Static Member="vs:SharedResources.Default" />
      </ResourceDictionary.MergedDictionaries>

      <BooleanToVisibilityConverter x:Key="BoolToVisConv" />

      <Style BasedOn="{StaticResource {x:Static vs:CodeSenseResources.ListViewStyleKey}}"
             TargetType="{x:Type ListView}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
      </Style>

      <Style BasedOn="{StaticResource {x:Static vs:CodeSenseResources.ListViewItemStyleKey}}"
             TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <EventSetter Event="MouseDoubleClick"
                     Handler="OnInstructionDoubleClick" />
      </Style>

      <Style BasedOn="{StaticResource {x:Static vs:CodeSenseResources.TreeViewStyleKey}}"
             TargetType="{x:Type TreeView}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
      </Style>

      <Style BasedOn="{StaticResource {x:Static vs:CodeSenseResources.TreeViewItemStyleKey}}"
             TargetType="{x:Type TreeViewItem}" />

      <Style x:Key="MethodTviStyle"
             BasedOn="{StaticResource {x:Static vs:CodeSenseResources.TreeViewItemStyleKey}}"
             TargetType="{x:Type TreeViewItem}">
        <Setter Property="Padding" Value="16,0,0,0" />
      </Style>

      <Style x:Key="PropAccessorTviStyle"
             BasedOn="{StaticResource {x:Static vs:CodeSenseResources.TreeViewItemStyleKey}}"
             TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="True" />
      </Style>

      <Style x:Key="InstrTviStyle"
             BasedOn="{StaticResource MethodTviStyle}"
             TargetType="{x:Type TreeViewItem}">
        <EventSetter Event="MouseDoubleClick"
                     Handler="OnInstructionDoubleClick" />
      </Style>

      <Style x:Key="PropInstrTviStyle"
             BasedOn="{StaticResource InstrTviStyle}"
             TargetType="{x:Type TreeViewItem}">
        <Setter Property="Padding" Value="0,0,0,0" />
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <StackPanel>
		<ListView ItemsSource="{Binding TableRows, Mode=OneTime}">
			<ListView.View>
				<GridView>
					<GridViewColumn Header="ResultCode" DisplayMemberBinding="{Binding ResponseCode, Mode=OneTime}" />
					<GridViewColumn Header="Count" DisplayMemberBinding="{Binding Count, Mode=OneTime}" />
				</GridView>
			</ListView.View>
		</ListView>
	</StackPanel>
</UserControl>
